
import * as types from "../types"
import {testerGenerator as gen} from "../util"
import * as _ from "lodash"

export const testers = {
  "_.isArguments": gen(_.isArguments),
  "_.isArray": gen(_.isArray),
  "_.isArrayBuffer": gen(_.isArrayBuffer),
  "_.isArrayLike": gen(_.isArrayLike),
  "_.isArrayLikeObject": gen(_.isArrayLikeObject),
  "_.isBoolean": gen(_.isBoolean),
  "_.isBuffer": gen(_.isBuffer),
  "_.isDate": gen(_.isDate),
  "_.isElement": gen(_.isElement),
  "_.isEmpty": gen(_.isEmpty),
  "_.isError": gen(_.isError),
  "_.isFinite": gen(_.isFinite),
  "_.isFunction": gen(_.isFunction),
  "_.isInteger": gen(_.isInteger),
  "_.isLength": gen(_.isLength),
  "_.isMap": gen(_.isMap),
  "_.isNaN": gen(_.isNaN),
  "_.isNative": gen(_.isNative),
  "_.isNil": gen(_.isNil),
  "_.isNull": gen(_.isNull),
  "_.isNumber": gen(_.isNumber),
  "_.isObject": gen(_.isObject),
  "_.isObjectLike": gen(_.isObjectLike),
  "_.isPlainObject": gen(_.isPlainObject),
  "_.isRegExp": gen(_.isRegExp),
  "_.isSafeInteger": gen(_.isSafeInteger),
  "_.isSet": gen(_.isSet),
  "_.isString": gen(_.isString),
  "_.isSymbol": gen(_.isSymbol),
  "_.isTypedArray": gen(_.isTypedArray),
  "_.isUndefined": gen(_.isUndefined),
  "_.isWeakMap": gen(_.isWeakMap),
  "_.isWeakSet": gen(_.isWeakSet),
}
